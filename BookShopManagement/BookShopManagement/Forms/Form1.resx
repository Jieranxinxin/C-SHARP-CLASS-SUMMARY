<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAANhJREFUSEvt
        ksENwjAQBF0CpaQUSqASRAl0ADXQGLx48DFjdAtIJpzP8Qsx0orkvLcrBaffIee8Qgc02agL9vdoba8v
        rOCCzqirhL0jKtQFBQ4m1FWCX+EbG30GQ7gEX1u4wNhcwnksXLDgljDvCxcszpbwvixcEFCV8DsmXBD0
        XnJChTHhgsBScntE57y18TgI1We5Ivd2hSDs+c2Re7tCEFL9oTyPKWF59rYwW1bCknsVOesrweyGCzyx
        EkzN4QJvWwmH4XDBzvcSMxTC4YJdlexs9McjpTviiL05iluW7gAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAAudJREFUaEPt
        moFx1DAQRa+ElJAS0gEpgQ5IB6ED0gF0kHQAHSQdkA6gA+jg+M/SehRl9yzd2TcJozfzZ4ysXenbksxJ
        2UXs9/snaYlH6bv0RfqQQ5shJseS56e0xFMObYegFNvFH4mOXeQ0r9C9S+k+1+3lbEYMOnmbU82oDJOn
        EBvRTV6rp/KJPUjXge6kH5LHfW6GdngLHsSSw8uNaNugT15fH2mghbvcnxDVuZBupL8EFHyTahPUoW44
        BA3VweQiqxkxVBdD0RsC7i0aMFT3KCOfJXulzxRkmo0YivHmWPdkVUxphD5Z/+jrTG3kOsfXHTnGCKtT
        zWW+3YxiSiPzg9A1ZmY2MwKKK3P0L51CcdsY0TWT1F05sq5y1boTZY4ryYs13eSqdY5VjZSJPcockZEX
        nXCI2htGjLoTJI80T+j8b6PMwUJQx5WKHsZ6RnogLoVPrJFjGDHKYUEC/vMXqXVoebGm7YcW16koJOpE
        /TAOEbU3jBhlYj6I3IvU+kH0Yk3bfxB7IC6FT6yRYxgxymHBisOmQaT5t4auXSO65jeLF2uKVr4x2Y1h
        JBVNvC0jPRCXwifWyDGMGP+fEa5TUcj7mCNcp6KQYaTgLEb4spMkUuuX3Ys1bf9l74G4FD6xRo5hxBhG
        UvjEMJLCJ042wn6st9vxSQoPQXVv0YjK7bfJreS1QdvGyUZa4FSWhlu3g75Kv7jRwVmMlHDUxpN+YUTC
        QHSW2MJRRtgtofFIGEX1maHBwSVn8AZDJDqSJofl89oylbsrbUZ6UBxPmqOw3yRphLrEzEOxB8Wtb6RE
        Oehc9JZgOtHN1Y9GOQ4aYeWodzSW9OqJqowNOM8MZfMGnkGZ5OU+JPo6Uxs5BVYt5gRLsg21mo8S9+gE
        dXtXrZA1jdSUE93wylYBI7ZaHKNDc6EXcnltNCmP0tNQIoYLw4YlsmXlog51p6GW07w91DlWlPIvJ4zp
        LxdytfdD7rjxnIs3YLf7Byco3FP7iRUIAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        FejNm/8BWPvUx8WcOUMAAAAASUVORK5CYII=
</value>
  </data>
</root>
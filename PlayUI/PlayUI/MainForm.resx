<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>